knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE,
out.width = '100%',
fig.retina =3
)
# Load Libraries
library(tidyverse)
library(tidycensus)
library(sf)
library(kableExtra)
library(tidyr)
library(ggplot2)
options(scipen=999)
options(tigris_class = "sf")
#these are functions developed for this class, so it takes you especially to the book to get those
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#f0f9e8","#bae4bc","#7bccc4","#43a2ca","#0868ac")
census_api_key('bf2d507651b5a621dbadd44533fb4f3deaab26bf', overwrite = TRUE)
dir.create("output")
# Load Libraries
library(tidyverse)
library(tidycensus)
library(sf)
library(kableExtra)
library(tidyr)
library(ggplot2)
library(viridis)
options(scipen=999)
options(tigris_class = "sf")
#these are functions developed for this class, so it takes you especially to the book to get those
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#f0f9e8","#bae4bc","#7bccc4","#43a2ca","#0868ac")
census_api_key('bf2d507651b5a621dbadd44533fb4f3deaab26bf', overwrite = TRUE)
dir.create("output")
acs_variable_list.2020 <- load_variables(2020, #year
"acs5", #five year ACS estimates
cache = TRUE)
acs_variable_list.2016 <- load_variables(2016, #year
"acs5", #five year ACS estimates
cache = TRUE)
View(acs_variable_list.2020)
View(acs_variable_list.2016)
View(acs_variable_list.2020)
knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE,
out.width = '100%',
fig.retina =3
)
# Load Libraries
library(tidyverse)
library(tidycensus)
library(sf)
library(kableExtra)
library(tidyr)
library(ggplot2)
library(viridis)
options(scipen=999)
options(tigris_class = "sf")
#these are functions developed for this class, so it takes you especially to the book to get those
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#f0f9e8","#bae4bc","#7bccc4","#43a2ca","#0868ac")
census_api_key('bf2d507651b5a621dbadd44533fb4f3deaab26bf', overwrite = TRUE)
dir.create("output")
acs_variable_list.2020 <- load_variables(2020, #year
"acs5", #five year ACS estimates
cache = TRUE)
acs_variable_list.2016 <- load_variables(2016, #year
"acs5", #five year ACS estimates
cache = TRUE)
View(acs_variable_list.2016)
tracts16 <-
get_acs(geography = "tract",
variables = c("B25026_001E",#pop
"B19013_001E", #med inc
"B25058_001E", #rent
"B24011_002E" ), #ppl in business science arts
year=2016,
state = "MA",
place = "Boston",
geometry=TRUE) %>%
st_transform('ESRI:102728')
tracts16 <-
get_acs(geography = "tract",
variables = c("B25026_001E",#pop
"B19013_001E", #med inc
"B25058_001E", #rent
"B24011_002E" ), #ppl in business science arts
year=2016,
state = "MA",
county=c("Boston"),
geometry=TRUE) %>%
st_transform('ESRI:102728')
boston_fips <- fips_place("Boston", state = "MA")
tracts16 <-
get_acs(geography = "tract",
variables = c("B25026_001E",#pop
"B19013_001E", #med inc
"B25058_001E", #rent
"B24011_002E" ), #ppl in business science arts
year=2016,
state = 25,
county=005, #using the boston FIPS code
geometry=TRUE) %>%
st_transform('ESRI:102728')
View(tracts16)
tracts16 <-
get_acs(geography = "tract",
variables = c("B25026_001E",#pop
"B19013_001E", #med inc
"B25058_001E", #rent
"B24011_002E" ), #ppl in business science arts
year=2016,
state = 25,
county=025, #using the boston FIPS code
geometry=TRUE) %>%
st_transform('ESRI:102728')
View(tracts16)
A <-
ggplot() +
geom_sf(data = totalPop16, aes(fill = estimate)) +
theme(
plot.title = element_text(size=22)
)
View(tracts16)
# making it wide from long
tracts16 <-
tracts16 %>%
dplyr::select( -NAME, -moe) %>%
spread(key = variable, value = estimate) %>% #spread makes it long to wide
rename(TotalPop = B25026_001,
MedInc = B19013_001,
MedRent = B25058_001,
BusArtsScience = B24011_002)
View(tracts16)
